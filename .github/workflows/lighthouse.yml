name: 'Lighthouse'

on:
  deployment_status:

jobs:
  lighthouse-production:
    name: Production
    if: ${{ github.event.deployment_status.state == 'success' && github.event.deployment.production_environment }}
    permissions:
      deployments: read
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: treosh/lighthouse-ci-action@v11
        with:
          configPath: './.lighthouse/lighthouserc.cjs'
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage
          urls: |
            ${{ github.event.deployment_status.environment_url }}
            ${{ github.event.deployment_status.environment_url }}/code/github-actions/gh-pages?theme=light
            ${{ github.event.deployment_status.environment_url }}/code/github-actions/gh-pages?theme=dark
            ${{ github.event.deployment_status.environment_url }}/code/components/pagination
            ${{ github.event.deployment_status.environment_url }}/games/minesweeper
            ${{ github.event.deployment_status.environment_url }}/embeds/v1/minesweeper
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
  lighthouse-pr:
    name: PR
    if: ${{ github.event.deployment_status.state == 'success' && !github.event.deployment.production_environment }}
    permissions:
      deployments: read
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: echo "target_url ${{ github.event.deployment_status.target_url }}"
      - uses: treosh/lighthouse-ci-action@v11
        with:
          configPath: './.lighthouse/lighthouserc.cjs'
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage
          urls: ${{ github.event.deployment_status.environment_url }}
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
