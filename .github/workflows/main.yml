name: 'Deploy'

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'main-deploy'
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  lint:
    name: Lint & Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Check
        run: npm run check

  # Build job
  build-gh-pages:
    name: Build GitHub pages
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Build with npm run build
        run: |
          npm ci
          npm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./build

  # Deployment job
  deploy-gh-pages:
    name: Deploy GitHub pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-gh-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  deploy-vercel:
    name: Deploy Vercel
    environment:
      name: vercel-pro
      url: ${{ steps.deploy-to-vercel.outputs.url }}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        id: deploy-to-vercel
        run: |
          echo "Deploying to Vercel..."
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} >> vercel-url.txt
          echo "Review URL:"
          cat vercel-url.txt
          echo "url=$(cat vercel-url.txt)" >> "$GITHUB_OUTPUT"
